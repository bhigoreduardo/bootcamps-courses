package view;

import controller.ProjectController;
import controller.TaskController;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import model.Project;
import model.Task;
import util.ButtonRenderer;
import util.DeadlineDecorate;
import util.TaskTableModel;

public class MainScreen extends javax.swing.JFrame {

    ProjectController projectController;
    TaskController taskController;

    DefaultListModel projectModel;
    TaskTableModel taskModel;

    public MainScreen() {
        initComponents();

        initDataController();
        initComponentsModel();

        decorateTableTasks();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelTasks = new javax.swing.JPanel();
        jScrollPaneTasks = new javax.swing.JScrollPane();
        jTableTasks = new javax.swing.JTable();
        jPanelHeader = new javax.swing.JPanel();
        jLabelHeaderTitle = new javax.swing.JLabel();
        jPanelHeaderProjects = new javax.swing.JPanel();
        jLabelHeaderProejctsTitle = new javax.swing.JLabel();
        jLabelHeaderProjectsAdd = new javax.swing.JLabel();
        jLabelHeaderProjectsDel = new javax.swing.JLabel();
        jLabelHeaderProjectsEdit = new javax.swing.JLabel();
        jPanelHeaderTasks = new javax.swing.JPanel();
        jLabelHeaderTasksTitle = new javax.swing.JLabel();
        jLabelHeaderTasksAdd = new javax.swing.JLabel();
        jPanelProjectsList = new javax.swing.JPanel();
        jScrollPaneProjectsList = new javax.swing.JScrollPane();
        jListProjectsList = new javax.swing.JList<>();
        jPanelTasksContainer = new javax.swing.JPanel();
        jPanelTasksEmpty = new javax.swing.JPanel();
        jLabelTasksEmptyIcon = new javax.swing.JLabel();
        jLabelTasksEmptyTitle = new javax.swing.JLabel();
        jLabelTasksEmptyDescription = new javax.swing.JLabel();

        jPanelTasks.setBackground(new java.awt.Color(255, 255, 255));

        jScrollPaneTasks.setBorder(null);

        jTableTasks.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nome", "Descrição", "Prazo", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableTasks.setGridColor(new java.awt.Color(255, 255, 255));
        jTableTasks.setRowHeight(40);
        jTableTasks.setSelectionBackground(new java.awt.Color(204, 204, 204));
        jTableTasks.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableTasksMouseClicked(evt);
            }
        });
        jScrollPaneTasks.setViewportView(jTableTasks);

        javax.swing.GroupLayout jPanelTasksLayout = new javax.swing.GroupLayout(jPanelTasks);
        jPanelTasks.setLayout(jPanelTasksLayout);
        jPanelTasksLayout.setHorizontalGroup(
            jPanelTasksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTasksLayout.createSequentialGroup()
                .addComponent(jScrollPaneTasks, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        jPanelTasksLayout.setVerticalGroup(
            jPanelTasksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTasksLayout.createSequentialGroup()
                .addComponent(jScrollPaneTasks, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(900, 700));

        jPanelHeader.setBackground(new java.awt.Color(52, 58, 64));

        jLabelHeaderTitle.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabelHeaderTitle.setForeground(new java.awt.Color(255, 255, 255));
        jLabelHeaderTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelHeaderTitle.setText("Project Manager");

        javax.swing.GroupLayout jPanelHeaderLayout = new javax.swing.GroupLayout(jPanelHeader);
        jPanelHeader.setLayout(jPanelHeaderLayout);
        jPanelHeaderLayout.setHorizontalGroup(
            jPanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelHeaderTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelHeaderLayout.setVerticalGroup(
            jPanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHeaderLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabelHeaderTitle)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jPanelHeaderProjects.setBackground(new java.awt.Color(255, 255, 255));
        jPanelHeaderProjects.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelHeaderProejctsTitle.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabelHeaderProejctsTitle.setText("Projetos");

        jLabelHeaderProjectsAdd.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabelHeaderProjectsAdd.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelHeaderProjectsAdd.setText("+");
        jLabelHeaderProjectsAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelHeaderProjectsAddMouseClicked(evt);
            }
        });

        jLabelHeaderProjectsDel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelHeaderProjectsDel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/delete.png"))); // NOI18N
        jLabelHeaderProjectsDel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelHeaderProjectsDelMouseClicked(evt);
            }
        });

        jLabelHeaderProjectsEdit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelHeaderProjectsEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/edit.png"))); // NOI18N
        jLabelHeaderProjectsEdit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelHeaderProjectsEditMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanelHeaderProjectsLayout = new javax.swing.GroupLayout(jPanelHeaderProjects);
        jPanelHeaderProjects.setLayout(jPanelHeaderProjectsLayout);
        jPanelHeaderProjectsLayout.setHorizontalGroup(
            jPanelHeaderProjectsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHeaderProjectsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelHeaderProejctsTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addComponent(jLabelHeaderProjectsEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelHeaderProjectsDel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelHeaderProjectsAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanelHeaderProjectsLayout.setVerticalGroup(
            jPanelHeaderProjectsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHeaderProjectsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelHeaderProjectsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabelHeaderProjectsAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelHeaderProejctsTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelHeaderProjectsDel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelHeaderProjectsEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelHeaderTasks.setBackground(new java.awt.Color(255, 255, 255));
        jPanelHeaderTasks.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelHeaderTasksTitle.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabelHeaderTasksTitle.setText("Tarefas");

        jLabelHeaderTasksAdd.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabelHeaderTasksAdd.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelHeaderTasksAdd.setText("+");
        jLabelHeaderTasksAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelHeaderTasksAddMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanelHeaderTasksLayout = new javax.swing.GroupLayout(jPanelHeaderTasks);
        jPanelHeaderTasks.setLayout(jPanelHeaderTasksLayout);
        jPanelHeaderTasksLayout.setHorizontalGroup(
            jPanelHeaderTasksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHeaderTasksLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelHeaderTasksTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelHeaderTasksAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanelHeaderTasksLayout.setVerticalGroup(
            jPanelHeaderTasksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHeaderTasksLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelHeaderTasksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelHeaderTasksTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelHeaderTasksAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanelProjectsList.setBackground(new java.awt.Color(255, 255, 255));
        jPanelProjectsList.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jListProjectsList.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jListProjectsList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListProjectsList.setFixedCellHeight(30);
        jListProjectsList.setSelectionBackground(new java.awt.Color(52, 58, 64));
        jListProjectsList.setSelectionForeground(new java.awt.Color(255, 255, 255));
        jListProjectsList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListProjectsListMouseClicked(evt);
            }
        });
        jScrollPaneProjectsList.setViewportView(jListProjectsList);

        javax.swing.GroupLayout jPanelProjectsListLayout = new javax.swing.GroupLayout(jPanelProjectsList);
        jPanelProjectsList.setLayout(jPanelProjectsListLayout);
        jPanelProjectsListLayout.setHorizontalGroup(
            jPanelProjectsListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelProjectsListLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPaneProjectsList, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelProjectsListLayout.setVerticalGroup(
            jPanelProjectsListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelProjectsListLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPaneProjectsList, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanelTasksContainer.setBackground(new java.awt.Color(255, 255, 255));
        jPanelTasksContainer.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanelTasksEmpty.setBackground(new java.awt.Color(255, 255, 255));
        jPanelTasksEmpty.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelTasksEmptyIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTasksEmptyIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/tasks.png"))); // NOI18N

        jLabelTasksEmptyTitle.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabelTasksEmptyTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTasksEmptyTitle.setText("Nenhuma tarefa cadastrada ;(");

        jLabelTasksEmptyDescription.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTasksEmptyDescription.setText("Toque no ícone \"+\" para adicionar");

        javax.swing.GroupLayout jPanelTasksEmptyLayout = new javax.swing.GroupLayout(jPanelTasksEmpty);
        jPanelTasksEmpty.setLayout(jPanelTasksEmptyLayout);
        jPanelTasksEmptyLayout.setHorizontalGroup(
            jPanelTasksEmptyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTasksEmptyLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelTasksEmptyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelTasksEmptyTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelTasksEmptyDescription, javax.swing.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE)
                    .addComponent(jLabelTasksEmptyIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelTasksEmptyLayout.setVerticalGroup(
            jPanelTasksEmptyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTasksEmptyLayout.createSequentialGroup()
                .addGap(131, 131, 131)
                .addComponent(jLabelTasksEmptyIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelTasksEmptyTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelTasksEmptyDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(159, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelTasksContainerLayout = new javax.swing.GroupLayout(jPanelTasksContainer);
        jPanelTasksContainer.setLayout(jPanelTasksContainerLayout);
        jPanelTasksContainerLayout.setHorizontalGroup(
            jPanelTasksContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 264, Short.MAX_VALUE)
            .addGroup(jPanelTasksContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanelTasksEmpty, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelTasksContainerLayout.setVerticalGroup(
            jPanelTasksContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 402, Short.MAX_VALUE)
            .addGroup(jPanelTasksContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanelTasksEmpty, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelHeaderProjects, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelProjectsList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelHeaderTasks, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelTasksContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelHeader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelHeaderProjects, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelHeaderTasks, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelProjectsList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelTasksContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabelHeaderProjectsAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelHeaderProjectsAddMouseClicked
        // Call Dialog Screen
        ProjectDialogScreen projectDialogScreen = new ProjectDialogScreen(this,
                rootPaneCheckingEnabled);
        projectDialogScreen.setVisible(true);

        // Realoder projects after closed Dialog Screen
        projectDialogScreen.addWindowListener(new WindowAdapter() {
            public void windowClosed(WindowEvent event) {
                loadProjects();
            }
        });
    }//GEN-LAST:event_jLabelHeaderProjectsAddMouseClicked

    private void jLabelHeaderTasksAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelHeaderTasksAddMouseClicked
        // Set project ID in Dialog Screen
        int index = jListProjectsList.getSelectedIndex();
        Project project = (Project) projectModel.get(index);
        int projectId = project.getId();

        // Call Dialog Screen
        TaskDialogScreen taskDialogScreen = new TaskDialogScreen(this,
                rootPaneCheckingEnabled);
        taskDialogScreen.setTaskProjectId(projectId);
        taskDialogScreen.setVisible(true);

        // Realoader tasks after closed Dialog Screen
        taskDialogScreen.addWindowListener(new WindowAdapter() {
            public void windowClosed(WindowEvent event) {
                loadTasks(projectId);
            }
        });
    }//GEN-LAST:event_jLabelHeaderTasksAddMouseClicked

    private void jListProjectsListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListProjectsListMouseClicked
        // Selected Project and reloader tasks
        int index = jListProjectsList.getSelectedIndex();

        Project project = (Project) projectModel.get(index);
        int projectId = project.getId();
        loadTasks(projectId);
    }//GEN-LAST:event_jListProjectsListMouseClicked

    private void jTableTasksMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableTasksMouseClicked
        // Project Selected
        int index = jListProjectsList.getSelectedIndex();
        Project project = (Project) projectModel.get(index);
        int projectId = project.getId();

        // Task Selected
        int rowIndex = jTableTasks.getSelectedRow();
        int columnIndex = jTableTasks.getSelectedColumn();

        Task task = taskModel.getTasks().get(rowIndex);

        switch (columnIndex) {
            // Update Status
            case 3:
                taskController.update(task);
                break;
            // Edit task
            case 4:
                TaskDialogScreen taskDialogScreen = new TaskDialogScreen(this,
                        rootPaneCheckingEnabled);
                taskDialogScreen.setTask(task);
                taskDialogScreen.setVisible(true);
                break;
            // Delete task
            case 5:
                taskController.delete(task.getId());
                // Reloader tasks
                loadTasks(projectId);
                break;
        }

        loadTasks(projectId);
    }//GEN-LAST:event_jTableTasksMouseClicked

    private void jLabelHeaderProjectsEditMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelHeaderProjectsEditMouseClicked
        // Project Selected
        int index = jListProjectsList.getSelectedIndex();
        Project project = (Project) projectModel.get(index);

        ProjectDialogScreen projectDialogScreen = new ProjectDialogScreen(this,
                rootPaneCheckingEnabled);
        projectDialogScreen.setProject(project);
        projectDialogScreen.setVisible(true);

    }//GEN-LAST:event_jLabelHeaderProjectsEditMouseClicked

    private void jLabelHeaderProjectsDelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelHeaderProjectsDelMouseClicked
        // Project Selected
        int index = jListProjectsList.getSelectedIndex();
        Project project = (Project) projectModel.get(index);
        int projectId = project.getId();

        List<Task> tasksResult = taskController.selectAll(projectId);
        if (tasksResult.isEmpty()) {
            // Tasks is Empty
            projectController.delete(projectId);
            loadProjects();
        } else {
            // Have Tasks
            JOptionPane.showMessageDialog(rootPane, "Não é possível excluir este projeto, pois existem tarefas cadastradas");
        }
    }//GEN-LAST:event_jLabelHeaderProjectsDelMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Java Swing".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabelHeaderProejctsTitle;
    private javax.swing.JLabel jLabelHeaderProjectsAdd;
    private javax.swing.JLabel jLabelHeaderProjectsDel;
    private javax.swing.JLabel jLabelHeaderProjectsEdit;
    private javax.swing.JLabel jLabelHeaderTasksAdd;
    private javax.swing.JLabel jLabelHeaderTasksTitle;
    private javax.swing.JLabel jLabelHeaderTitle;
    private javax.swing.JLabel jLabelTasksEmptyDescription;
    private javax.swing.JLabel jLabelTasksEmptyIcon;
    private javax.swing.JLabel jLabelTasksEmptyTitle;
    private javax.swing.JList<String> jListProjectsList;
    private javax.swing.JPanel jPanelHeader;
    private javax.swing.JPanel jPanelHeaderProjects;
    private javax.swing.JPanel jPanelHeaderTasks;
    private javax.swing.JPanel jPanelProjectsList;
    private javax.swing.JPanel jPanelTasks;
    private javax.swing.JPanel jPanelTasksContainer;
    private javax.swing.JPanel jPanelTasksEmpty;
    private javax.swing.JScrollPane jScrollPaneProjectsList;
    private javax.swing.JScrollPane jScrollPaneTasks;
    private javax.swing.JTable jTableTasks;
    // End of variables declaration//GEN-END:variables

    public void decorateTableTasks() {
        // Decorate Table Header
        jTableTasks.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 14));
        jTableTasks.getTableHeader().setForeground(new Color(255, 255, 255));
        jTableTasks.getTableHeader().setBackground(new Color(52, 58, 62));

        // Sorted Values in Table
        jTableTasks.setAutoCreateRowSorter(true);

        // Decorate Cell in Table
        jTableTasks.getColumnModel()
                .getColumn(2).setCellRenderer(new DeadlineDecorate());
        jTableTasks.getColumnModel()
                .getColumn(4).setCellRenderer(new ButtonRenderer("edit"));
        jTableTasks.getColumnModel()
                .getColumn(5).setCellRenderer(new ButtonRenderer("delete"));
    }

    public void initDataController() {
        projectController = new ProjectController();
        taskController = new TaskController();
    }

    public void initComponentsModel() {
        projectModel = new DefaultListModel();
        loadProjects();

        taskModel = new TaskTableModel();
        jTableTasks.setModel(taskModel);

        // Auto first project Selected
        if (projectModel.isEmpty()) {
            // Project Empty
            showTableTasks(true);
        } else {
            // Have Project
            jListProjectsList.setSelectedIndex(0);
            Project project = (Project) projectModel.get(0);
            int projectId = project.getId();
            loadTasks(projectId);
        }

    }

    public void loadTasks(int projectId) {
        List<Task> tasksResult = taskController.selectAll(projectId);
        taskModel.setTasks(tasksResult);

        // Loaded Table Tasks
        showTableTasks(tasksResult.isEmpty());
    }

    public void loadProjects() {
        List<Project> projectsResult = projectController.selectAll();
        projectModel.clear();

        for (int index = 0; index < projectsResult.size(); index++) {
            Project project = projectsResult.get(index);
            projectModel.addElement(project);
        }

        jListProjectsList.setModel(projectModel);
    }

    public void showTableTasks(boolean hasTasks) {
        if (hasTasks) {
            // Tasks Empty
            if (jPanelTasks.isVisible()) {
                jPanelTasks.setVisible(false);
                jPanelTasksContainer.remove(jPanelTasks);
            }

            jPanelTasksContainer.add(jPanelTasksEmpty);
            jPanelTasksEmpty.setVisible(true);
            jPanelTasksEmpty.setSize(jPanelTasksContainer.getWidth(),
                    jPanelTasksContainer.getHeight());
        } else {
            // Have Tasks
            if (jPanelTasksEmpty.isVisible()) {
                jPanelTasksEmpty.setVisible(false);
                jPanelTasksContainer.remove(jPanelTasksEmpty);
            }

            jPanelTasksContainer.add(jPanelTasks);
            jPanelTasks.setVisible(true);
            jPanelTasks.setSize(jPanelTasksContainer.getWidth(),
                    jPanelTasksContainer.getHeight());
        }

    }
}
